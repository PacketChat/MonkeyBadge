name: Perform firmware build on GitHub Actions (native)
on:
  pull_request:
    types: 
      - closed
    branches: 
      - 'main'
    paths:
      - 'board/**'
      - 'badge/**'
  push:
    paths:
      - '.github/workflows/esp32-build.yml'
      - 'board/**'
      - 'badge/**'

jobs:
  build:

    runs-on: ubuntu-latest

    steps:
    - name: Checkout MonkeyBadge
      uses: actions/checkout@v4

    - name: Checkout MicroPython
      uses: actions/checkout@v4
      with:
        path: micropython
        repository: micropython/micropython
        submodules: 'recursive'

    - name: set release date
      run: |  
        echo "RELEASE_DATE=$(date +%Y-%m-%d.%s)" >> ${GITHUB_ENV}  

    - name: esp-idf build
      uses: espressif/esp-idf-ci-action@v1
      with:
        esp_idf_version: v5.0.4
        target: esp32
        path: micropython/ports/esp32
        command:  make -C micropython/ports/esp32 BOARD_DIR=${{ github.workspace}}/board BOARD=monkeybadge CONFIG_APP_PROJECT_VER=${{ env.RELEASE_DATE }} all

    - name: Collect Assets
      run: |
        mkdir -p ${{ github.workspace }}/dist 
        cp ${{ github.workspace }}/micropython/ports/esp32/build-monkeybadge/firmware.bin ${{ github.workspace }}/dist/firmware_${{ env.RELEASE_DATE }}.bin
        cp ${{ github.workspace }}/micropython/ports/esp32/build-monkeybadge/micropython.bin ${{ github.workspace }}/dist/ota_update_${{ env.RELEASE_DATE }}.bin
        SHA256SUM=$(sha256sum ${{ github.workspace }}/dist/ota_update_${{ env.RELEASE_DATE }}.bin | awk '{print $1}')
        FSIZE=$(find  -L * -name ota_update_${{ env.RELEASE_DATE }}.bin -printf '%s\n')
        jq  -n --arg fsize "${FSIZE}" --arg sha "${SHA256SUM}" --arg fname ota_update_${{ env.RELEASE_DATE }}.bin '{"firmware": $fname, "sha": $sha, "length": $fsize}' | tee ${{ github.workspace}}/dist/ota_update_${{ env.RELEASE_DATE }}.json
        echo "SHA256SUM=$SHA256SUM" | tee -a ${GITHUB_ENV}

    - name: Upload Artifacts - Zip Bundle
      uses: actions/upload-artifact@v3
      with: 
        name: ota_update_${{ env.RELEASE_DATE }}
        path: ${{ github.workspace }}/dist/**

    - name: Upload Artifacts - Over the Air (OTA) binary update
      uses: actions/upload-artifact@v3
      with:
        name: ota_update_${{ env.RELEASE_DATE }}.bin
        path: ${{ github.workspace }}/dist/ota_update_${{ env.RELEASE_DATE }}.bin

    - name: Upload Artifacts - OTA JSON Manifest
      uses: actions/upload-artifact@v3
      with:
        name: ota_update_${{ env.RELEASE_DATE }}.json
        path: ${{ github.workspace }}/dist/ota_update_${{ env.RELEASE_DATE }}.json

    - name: Upload Artifacts - Full binary firmware
      uses: actions/upload-artifact@v3
      with:
        name: firmware_${{ env.RELEASE_DATE }}.bin
        path: ${{ github.workspace }}/dist/firmware_${{ env.RELEASE_DATE }}.bin
